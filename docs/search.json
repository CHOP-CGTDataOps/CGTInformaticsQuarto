[
  {
    "objectID": "posts/REDCapTidieR_v0.2.html",
    "href": "posts/REDCapTidieR_v0.2.html",
    "title": "REDCapTidieR 0.2.0 ‚òÉÔ∏è",
    "section": "",
    "text": "We‚Äôre thrilled to announce the release of REDCapTidieR v0.2.0 on CRAN! REDCapTidieR provides a user-friendly way to import data from a REDCap project into the R environment. You can install the current version from CRAN using install.packages(\"REDCapTidieR\")."
  },
  {
    "objectID": "posts/REDCapTidieR_v0.2.html#new-names-for-functions",
    "href": "posts/REDCapTidieR_v0.2.html#new-names-for-functions",
    "title": "REDCapTidieR 0.2.0 ‚òÉÔ∏è",
    "section": "New names for functions",
    "text": "New names for functions\nWe have decided to rename some of the exported functions of our package. Here is what changed:\n\nread_redcap_tidy() is now read_redcap()\nbind_tables() is now bind_tibbles()\nextract_table() is now extract_tibble()\nextract_tables() is now extract_tibbles()\n\nWe have also cleaned up the API to make the function arguments more consistent.\nWe are handling each of these name changes with deprecation functions of the lifecycle package. This means that you can still use the original function names, but you will receive an annoying alert to switch to the new ones each time you try to use them. At some point in the future we may remove the deprecated functions from the package.\n\nWhy on earth would you do that?!\nWe want to design our API so it‚Äôs easy to learn and use.\nThe main function of the package is read_redcap(), and its name explains exactly what it does: it reads or imports data from REDCap. The fact that the object that this function returns (i.e.¬†the supertibble) is tidy is a technical detail.\nWe replaced ‚Äútable‚Äù with ‚Äútibble‚Äù in the data tibble extraction functions because ‚Äútibble‚Äù is a more precise term than ‚Äútable.‚Äù Also, this way we are being more consistent in our use of REDCapTidieR vocabulary such as ‚Äúsupertibble‚Äù and ‚Äúdata tibble‚Äù.\nWe also thought about the names in terms of teachability. When you explain how to use the package to someone for the first time, how would you describe the action of each of the functions? For example, how do you read data from REDCap? With read_redcap(). How do you extract a data tibble from the supertibble? With extract_tibble(). Or if you‚Äôd rather bind the tibbles to your environment, use bind_tibbles().\n\n\nWhy now?\nREDCapTidieR is still very new and there doesn‚Äôt yet exist much code that depends on it (we hope this will change!). The cost of fixing things is low now compared to later on."
  },
  {
    "objectID": "posts/REDCapTidieR_v0.2.html#improved-documentation",
    "href": "posts/REDCapTidieR_v0.2.html#improved-documentation",
    "title": "REDCapTidieR 0.2.0 ‚òÉÔ∏è",
    "section": "Improved Documentation",
    "text": "Improved Documentation\nWe‚Äôve been hard at work writing up extensive documentation to support new users in adopting REDCapTidieR. The Getting Started vignette walks new users through importing data from REDCap into a supertibble, exploring the contents of the supertibble in the RStudio Data Viewer, extracting data tibbles, and adding variable labels.\nThe Diving Deeper vignette explains in detail how REDCapTidieR constructs data tibbles.\nWe also created a comprehensive Glossary of REDCap and REDCapTidieR terms to which we will link frequently."
  },
  {
    "objectID": "posts/REDCapTidieR_v0.2.html#hello-metadata",
    "href": "posts/REDCapTidieR_v0.2.html#hello-metadata",
    "title": "REDCapTidieR 0.2.0 ‚òÉÔ∏è",
    "section": "Hello metadata!",
    "text": "Hello metadata!\nA key change to REDCapTidieR in v0.2.0 is that the supertibble now includes a lot of additional instrument-level metadata.\n\nlibrary(REDCapTidieR)\n\nsuperheroes <- read_redcap(redcap_uri, token)\n\nsuperheroes |>\n  rmarkdown::paged_table()\n\n\n\n  \n\n\n\nREDCapTidieR 0.2.0 provides the following new columns:\n\nredcap_form_label: a human-readable label for the instrument\nredcap_metadata: The metadata tibble with instrument-level metadata derived from REDCapR::redcap_metadata_read()\nredcap_events: Events and arms associated with this instrument (for longitudinal projects only)\ndata_rows, data_cols: Row and column counts of the data tibble (redcap_data)\ndata_size: Size of the redcap_data tibble in memory\ndata_na_pct: The percentage of missing data in the redcap_data tibble"
  },
  {
    "objectID": "posts/REDCapTidieR_v0.2.html#redcaptidier-labelled",
    "href": "posts/REDCapTidieR_v0.2.html#redcaptidier-labelled",
    "title": "REDCapTidieR 0.2.0 ‚òÉÔ∏è",
    "section": "REDCapTidieR ‚ù§Ô∏è labelled",
    "text": "REDCapTidieR ‚ù§Ô∏è labelled\nThe labelled R package provides functions to attach a human-readable description (a label) to a variable (a variable label). Variable labels are awesome and we think you will find them useful! Take a look at Shannon Pileggi‚Äôs blog post The case for variable labels in R to find out more.\nREDCapTidieR now provides make_labelled(), a function that attaches variable labels to the supertibble and the tibbles it contains:\n\nsuperheroes_labelled <- superheroes |>\n  make_labelled()\n\nIn the RStudio Data Viewer, variable labels appear below each column name. This makes it easy to inspect the contents of the supertibble:\n\nWhile the variable labels in the supertibble are static and pre-defined, variable labels in the data tibbles (redcap_data) are derived from the REDCap field labels. A field label is a piece of text that prompts the REDCap user during data entry. We repurpose field labels to provide a description for the variable:"
  },
  {
    "objectID": "posts/REDCapTidieR_v0.2.html#new-arguments-for-read_redcap",
    "href": "posts/REDCapTidieR_v0.2.html#new-arguments-for-read_redcap",
    "title": "REDCapTidieR 0.2.0 ‚òÉÔ∏è",
    "section": "New arguments for read_redcap()",
    "text": "New arguments for read_redcap()\nWe have introduced two new arguments that can be passed to the read_redcap() function:\n\nforms\nexport_survey_fields\n\n\nRetrieve data from a subset of instruments\nYou can now import data from specific instruments from your project instead of importing the entire dataset. This can be useful for very large projects.\n\n# Only import the super_hero_powers instrument\nsuperheroes_powers <- read_redcap(\n  redcap_uri,\n  token,\n  forms = \"super_hero_powers\"\n)\n\nsuperheroes_powers |>\n  rmarkdown::paged_table()\n\n\n\n  \n\n\n\n\n\nSupport for REDCap surveys\nREDCap now supports surveys, which are a special type of instrument that can be filled out by someone who isn‚Äôt a registered user of the REDCap project. Instruments that are used as surveys generate additional data columns:\n\nredcap_survey_timestamp: the time at which the survey was completed\nredcap_survey_identifier: the participant identifier (this will be NA if the Participant Identifier feature in REDCap is disabled such as for an anonymous survey)\n\nBy default, read_redcap() will now return these columns if the instrument is set up as a survey. Note the redcap_survey_identifier and redcap_survey_timestamp columns below:\n\nsurvey_database <- read_redcap(redcap_uri, survey_token)\n\nsurvey_database |>\n  extract_tibble(\"survey\") |> \n  dplyr::glimpse()\n\nRows: 4\nColumns: 9\n$ record_id                <dbl> 1, 2, 3, 4\n$ survey_yesno             <lgl> TRUE, FALSE, NA, NA\n$ survey_radio             <fct> Choice 1, Choice 2, NA, NA\n$ survey_checkbox___one    <lgl> FALSE, FALSE, FALSE, FALSE\n$ survey_checkbox___two    <lgl> TRUE, TRUE, FALSE, FALSE\n$ survey_checkbox___three  <lgl> TRUE, TRUE, FALSE, FALSE\n$ redcap_survey_identifier <lgl> NA, NA, NA, NA\n$ redcap_survey_timestamp  <dttm> 2022-11-09 10:33:35, NA, NA, NA\n$ form_status_complete     <fct> Complete, Incomplete, Incomplete, Incomplete"
  },
  {
    "objectID": "posts/REDCapTidieR_v0.2.html#performance-improvements-and-enhancements",
    "href": "posts/REDCapTidieR_v0.2.html#performance-improvements-and-enhancements",
    "title": "REDCapTidieR 0.2.0 ‚òÉÔ∏è",
    "section": "Performance improvements and enhancements",
    "text": "Performance improvements and enhancements\n\nImproved execution time by >2.5X by optimizing internal functions\nAdded many helpful warnings and error messages, using cli for pretty printing\nTests and vignettes now use httptest to mock and cache REDCap API calls\nImplemented GitHub Actions lint check\nReplaced deprecated .data pronoun in tidyselect expressions"
  },
  {
    "objectID": "posts/REDCapTidieR_v0.2.html#bug-fixes",
    "href": "posts/REDCapTidieR_v0.2.html#bug-fixes",
    "title": "REDCapTidieR 0.2.0 ‚òÉÔ∏è",
    "section": "Bug fixes",
    "text": "Bug fixes\n\nFixed a bug in which similarly named variables could be duplicated under some circumstances\nOrder of instruments in the supertibble is now the same as the order of instruments in REDCap\nFixed an issue in which extract_* functions under some circumstances returned NULL instead of the expected tibbles"
  },
  {
    "objectID": "posts/REDCapTidieR_v0.3.html",
    "href": "posts/REDCapTidieR_v0.3.html",
    "title": "REDCapTidieR 0.3.0",
    "section": "",
    "text": "We‚Äôre thrilled to announce the release of REDCapTidieR v0.3.0 on CRAN! REDCapTidieR provides a user-friendly way to import data from a REDCap project into the R environment.\nYou can install the current version from CRAN with:"
  },
  {
    "objectID": "posts/REDCapTidieR_v0.3.html#repeating-events-support",
    "href": "posts/REDCapTidieR_v0.3.html#repeating-events-support",
    "title": "REDCapTidieR 0.3.0",
    "section": "Repeating events support üéâ",
    "text": "Repeating events support üéâ\n\nWhat this means in REDCap\nOne of the biggest updates to REDCapTidieR is support for REDCap ‚Äúrepeating events.‚Äù For the uninitiated, REDCap allows for two types of repeating elements: instruments and events. Note that each of these is only available to longitudinal databases. When designing a REDCap database, developers have the option to specify whether an event repeats all instruments together or repeats instruments independently of each other. From REDCap, this interface looks like:\n\nFor a given record that has both repeating instruments and repeating events, this takes the visual form:\n\n\n\n\n\nWhere the repeating instrument is shown in the red box and the repeating event is shown in the green box.\nFrom the API, repeating events aren‚Äôt captured much differently from repeating instruments In fact, no new column names are added to the data export. The same default columns of redcap_repeat_instrument and redcap_repeat_instance are used to indicate a repeating instrument when both are filled with data. It is the lack of data in redcap_repeat_instrument while data remains in redcap_repeat_instance which indicates a repeating event In the image below, a sample REDCap export is shown where the repeating instrument data is shown in the red box and the repeating event data is shown in green box]{style=‚Äúcolor: green;‚Äù}:\n\n\n\n\n\n\nIt is important to note that repeating instruments cannot be included in repeating events, and REDCapTidieR will give an error if this is forced and detected!\n\n\n\nWhat this means in REDCapTidieR\nFor REDCapTidieR 0.3.0, we decided it is better to be explicit about what our columns mean. For this reason, redcap_repeat_instance has been split into redcap_form_instance and redcap_event_instance for applicable databases. This is a breaking change in the output of the package.\nFor the above sample datbase, the typical REDCapTidieR::read_readcap() output stays the same:\n\n\n\n\n\nHowever, for the repeating instrument, the new redcap_form_instance variable can be seen in the red box:\n\n\n\n\n\nAnd the new redcap_event_instance variable can be seen in the green box:\n\n\n\n\n\n\n\nWhat this means for you\nThe additional capabilities provided by repeating events support brought us back to the drawing board for how we wanted to best tackle REDCap data tibbles. A cornerstone decision for REDCapTidieR‚Äôs design is to remove any sparsity from a REDCap output, as given by the default block matrix. By introducing redcap_event_instance, we are actively choosing to reintroduce the potential for NA/missing data. This rationale is based on the need to have data tibble columns preserved with singular meaning. Any one column should not be dependent on another for identification of structure. The block matrix and associated use of redcap_repeat_instrument and redcap_repeat_instance is not in line with the reduction in ambiguity that REDCapTidieR seeks to provide developers.\nThis means that for longitudinal REDCap databases, any use of redcap_repeat_instance needs to be updated to use the appropriate redcap_form_instance/redcap_event_instance variables."
  },
  {
    "objectID": "posts/REDCapTidieR_v0.3.html#performance-improvements-and-enhancements",
    "href": "posts/REDCapTidieR_v0.3.html#performance-improvements-and-enhancements",
    "title": "REDCapTidieR 0.3.0",
    "section": "Performance improvements and enhancements",
    "text": "Performance improvements and enhancements\n\nImproved error message suite:\n\nHelpful error message provided for various conditions related to REDCap API calls\nHelpful error messages added for checks across all exported functions\nUnexpected error messages provided with direction to submitting bug reports\nImproved error messages for label parsing\n\nThe default select_choices_and_calculations exported by the REDCap API for metadata purposes has been reintegrated. It was dropped in v0.2.0."
  },
  {
    "objectID": "posts/REDCapTidieR_v0.3.html#bug-fixes",
    "href": "posts/REDCapTidieR_v0.3.html#bug-fixes",
    "title": "REDCapTidieR 0.3.0",
    "section": "Bug Fixes",
    "text": "Bug Fixes\n\nFixed a bug where the suppress_redcapr_messages argument for read_redcap was not working appropriately\nFixed a bug where REDCap checkbox labels without white space would be incorrectly parsed\nAdded a warning when REDCapTidieR detects a multiple choice field that has duplicated labels"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to CGT Informatics!",
    "section": "",
    "text": "Welcome to the home page for the Children‚Äôs Hospital of Philadelphia‚Äôs Cell & Gene Therapy Informatics site.\nThis website serves as a repository for publicly available and open-source software, news, and publications."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About CGT Informatics",
    "section": "",
    "text": "Accelerating breakthroughs in Cell and Gene Therapy through Data"
  },
  {
    "objectID": "about.html#mission",
    "href": "about.html#mission",
    "title": "About CGT Informatics",
    "section": "Mission",
    "text": "Mission\nTo build systems that continuously deliver reliable, high-quality, and timely data to Cell and Gene Therapy clinicians and researchers in order to help clinical decision making, improve and automate quality operations, and accelerate Cell and Gene Therapy clinical research."
  },
  {
    "objectID": "about.html#philosophy",
    "href": "about.html#philosophy",
    "title": "About CGT Informatics",
    "section": "Philosophy",
    "text": "Philosophy\n\nDeliver value incrementally, and with the shortest lead time possible\nOwn the entire value stream and take accountability for the outcome\nContinuously learn and improve\nMinimize waste, hardship, and drudgery"
  },
  {
    "objectID": "about.html#members",
    "href": "about.html#members",
    "title": "About CGT Informatics",
    "section": "Members",
    "text": "Members\nCGT Informatics is comprised of the following members:\n\nStephan Kadauke, MD, PhD\nRichard Hanna\nEzra Porter"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Posts",
    "section": "",
    "text": "REDCapTidieR 0.3.0\n\n\n\n\n\n\n\nREDCap\n\n\nREDCapTidieR\n\n\nR\n\n\n\n\nREDCapTidieR v0.3.0 release announcement and change descriptions.\n\n\n\n\n\n\nFeb 28, 2023\n\n\nStephan Kadauke, Ezra Porter, Richard Hanna\n\n\n\n\n\n\n  \n\n\n\n\nREDCapTidieR 0.2.0 ‚òÉÔ∏è\n\n\n\n\n\n\n\nREDCap\n\n\nREDCapTidieR\n\n\nR\n\n\n\n\nREDCapTidieR v0.2.0 release announcement and change descriptions.\n\n\n\n\n\n\nDec 6, 2022\n\n\nStephan Kadauke, Ezra Porter, Richard Hanna\n\n\n\n\n\n\nNo matching items"
  }
]