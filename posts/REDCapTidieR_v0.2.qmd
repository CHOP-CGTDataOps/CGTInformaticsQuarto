---
title: REDCapTidieR 0.2.0
subtitle: Introducing numerous feature enhancements and improvements
image: img/REDCapTidieR.png
author: Stephan Kadauke, Ezra Porter, Richard Hanna
---

We're thrilled to announce the release of [`REDCapTidieR`](https://chop-cgtdataops.github.io/REDCapTidieR/) v0.2.0 on CRAN. `REDCapTidieR` provides an elegant way to import data from a [REDCap](https://www.project-redcap.org/) database into an R environment.

`REDCapTidieR` is led by a primary function, `read_redcap_tidy`, built on top of the streamlined API extraction processes provided by the [`REDCapR`](https://ouhscbbmc.github.io/REDCapR/) package. `read_redcap_tidy` does all the laborious work of taking complex REDCap databases and transforming them into manageable, tidy tables for easier processing with less start up time for analysts. The output provided is referred to as the **supertibble**, since the REDCap data is provided in a "`tibble` of `tibble`s". In a supertibble output, each row represents a REDCap form/instrument containing a **list column** of the associated `tibble`.

## Expanding the Supertibble: Introducing Metadata

One of the primary advancements of `REDCapTidieR` in `v0.2.0` will be immediately apparent when viewing a supertibble output:

```{r load env vars and DT function}
#| include: false
# library(DT)
library(dplyr)

token <- Sys.getenv("SUPERHEROES_REDCAP_API")
redcap_uri <- Sys.getenv("REDCAP_URI")
# custom_display <- function(x){datatable(data = x, rownames = FALSE, options = list(
#     dom = 't'
#   ))}
```

```{r display supertibble}
#| include: true
#| echo: true
#| cache: true
library(REDCapTidieR)

superheroes_tidy <- read_redcap_tidy(redcap_uri, token)

superheroes_tidy %>% 
  dplyr::glimpse()
```

Where in `0.1` the supertibble only provided three columns, we now have access to **six** new ones. These include:

- `redcap_form_label`: The form label that corresponds to the form name
- `redcap_metadata`: REDCap metadata associated with the form
- `data_rows`/`data_cols`: Row and column counts
- `data_size`: Size of the `redcap_data` corresponding to the form, given in [`lobstr_bytes`](https://lobstr.r-lib.org/)
- `data_na_pct`: The percentage of missing data in the corresponding `redcap_data`

## New `read_redcap_tidy` Arguments

To enhance and expand the capabilities of `read_redcap_tidy`, we've introduced two new arguments to pass to the API:

- `forms`
- `export_survey_fields`

You can now call specific `forms` from your database instead of defaulting to downloading the entire dataset. This can be especially useful for very large databases where full data downloads take up needless memory.

```{r forms example}
#| include: true
#| echo: true
#| cache: true
superheroes_powers <- read_redcap_tidy(redcap_uri, 
                                       token, 
                                       forms = "super_hero_powers")
superheroes_powers
```

### Support for Survey Fields

We have also included default survey fields from the API:

- `[instrument_name]_timestamp`
- `redcap_survey_identifier`

By default, these will appear for survey projects but can be turned off if desired by setting `export_survey_fields` to `FALSE`. Please refer to the REDCap documentation regarding behavior of these fields, especially survey identifiers as they require databases to be set up in special ways.

```{r survey token}
#| include: false
#| echo: false
survey_token <- Sys.getenv("REDCAPTIDIER_CLASSIC_API")
```

```{r survey example}
#| include: true
#| echo: true
#| cache: true
survey_database <- read_redcap_tidy(redcap_uri,
                                    survey_token,
                                    forms = "survey",
                                    export_survey_fields = TRUE)

survey_database$redcap_data[[1]] %>% 
  dplyr::glimpse()
```   

Note the inclusion of the `redcap_survey_identifier` and `survey_timestamp` columns.

## Introducing `make_labelled`

WIP

## Performance Improvements and Enhancements

- Internal function `check_repeat_and_nonrepeat` optimized
- Internal function `distill_*_table_long` optimized
- Internal function `multi_choice_to_labels` optimized
- `cli` implemented for all warnings and errors
- `httptest` implementation in tests and vignettes

## Various Bug Fixes

- `extract_*` bug fixed to align with new metadata outputs
- REDCap `form_name` order preservation bug fixed
- `tidyselect` warnings addressed with [`tidyselect v1.2.0`](https://tidyselect.r-lib.org/news/index.html#lifecycle-changes-1-2-0)
- `renv` CI cacheing enabled for GitHub Actions optimization
